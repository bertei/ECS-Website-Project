name: Deploy to AWS ECS

##This workflow triggers everytime website folder files are modified. Also can be manually run thanks to workflow_dispatch
on:
  push:
    branches: [ main ]
    paths:
      - 'Website/Dockerfile'
      - 'Website/**.html'
      - 'Website/**.css'
  workflow_dispatch:

jobs:
  ecs-deployment:
    name: ECS-Deployment
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./Website

    steps:
      - name: Checkout (copy repo to runner)
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to AWS ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: $${ github.sha }}
        run: |
          ls
          docker build -t 378842471989.dkr.ecr.us-east-1.amazonaws.com/ecs-website-images:v2 .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT